# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  GRADLE_USER_HOME: $(Pipeline.Workspace)/.gradle

steps:
  - task: Cache@2
    inputs:
      key: 'gradle | "$(Agent.OS)" | **/build.gradle.kts'
      restoreKeys: |
        gradle | "$(Agent.OS)"
        gradle
      path: $(GRADLE_USER_HOME)
    displayName: 'Cache Gradle packages'

  - task: JavaToolInstaller@0
    inputs:
      versionSpec: '17'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'PreInstalled'

  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      tasks: 'clean assembleDebug testDebug'
    displayName: 'Build and Test'

  - task: CopyFiles@2
    inputs:
      contents: '**/*.apk'
      targetFolder: '$(build.artifactStagingDirectory)'
    displayName: 'Copy APK files'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(build.artifactStagingDirectory)'
      artifactName: 'drop'
      publishLocation: 'Container'
    displayName: 'Publish APK'
